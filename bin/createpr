#!/usr/bin/env bash

set -e
set -x

usage() {
	echo "Create a draft Pull Request from the current branch." >&2
	echo >&2
	echo "usage:" >&2
	echo "  $(basename "${0}") <title>" >&2
	echo >&2

	if [ -n "${1}" ]; then echo -e "${A_CS} error: ${1} ${N_CS}" >&2; fi

	exit 1
}

if [[ "${1}" =~ ^-?-h(elp)?$ ]]; then usage ''; fi

if has-staged-changes; then
	echo -e "${W_CS} I see staged changes. ${N_CS}" >&2
	if prompt 'Do you want to create a Pull Request from the staged changes?'; then
		chainpr "$@"
		exit
	else
		usage "Unexpected staged changes."
	fi
fi


bodyfile="$(mktemp)"
printf "%s\n\n" "${*}" > "${bodyfile}"
if [ -f 'PULL_REQUEST_TEMPLATE.md' ]; then cat 'PULL_REQUEST_TEMPLATE.md' >> "${bodyfile}"; fi
nano "${bodyfile}"

title="$(head -n 1 "${bodyfile}")"
body="$(tail -n +2 "${bodyfile}" | sed -e '/./,$!d' | tr '\n' 'Ω' | sed -e 's/Ω/\\r\\n/g')"

rm "${bodyfile}"

# message="$(generate-commit-message "${title}")"
branch="$(generate-branch-name "${title}")"
base="$(get-repo-base-branch)"
draft='true'

if [ -z "${title}" ]; then usage "Pull Request title is required."; fi
# if [ -z "${message}" ]; then usage "Could not derive commit message."; fi
if [ -z "${branch}" ]; then usage "Could not derive branch name."; fi
if [ -z "${base}" ]; then usage "Could not determine base branch."; fi

# TODO: try to recover from this:
# if has-remote-branch "${branch}" && ! [ "${branch}" != "$(get-current-branch)" ]; then
# 	usage "Branch already exists: '${branch}'"
# fi

read -d '' -r data <<JSON || :
{
	"title": "${title}",
	"base": "${base}",
	"head": "${branch}",
	"body": "${body}",
	"draft": ${draft}
}
JSON

echo "${data}" >&2

if ! prompt 'Look good?'; then exit 1; fi

if [ "${branch}" != "$(get-current-branch)" ]; then
	git checkout -b "${branch}"
fi

# git commit -S -m "${message}" --no-verify
git push -u origin "${branch}"
auth_header="Authorization: bearer ${GITHUB_TOKEN}"
accept_header='Accept: application/vnd.github.shadow-cat-preview+json'
response="$(curl -H "${auth_header}" -H "${accept_header}" -d "${data}" "$(get-repo-api)/repos/$(get-repo-path)/pulls" -s)"

prn="$(jq '.number' <<< "${response}")"
user="$(jq -r '.user.login' <<< "${response}")"

if [ -z "${prn}" ] || [ "${prn}" == 'null' ]; then
	echo "${response}" >&2
	echo "Something bad happened." >&2
	exit 1
fi

link="$(get-pull-request-link "${prn}")"
open "${link}"

read -d '' -r data << JSON || :
{
	"assignees": [
		"${user}"
	]
}
JSON

curl -H "Authorization: bearer ${GITHUB_TOKEN}" -d "${data}" "$(get-repo-api)/repos/$(get-repo-path)/issues/${prn}/assignees"

echo -e "${L_CS}${link}{$N_CS}" >&2
