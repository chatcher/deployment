#!/usr/bin/env bash

set -e
set -x

usage() {
	echo "Update the current branch by merging its base branch as determined by its PR" >&2
	echo >&2
	echo "usage:" >&2
	echo "  $(basename "${0}")>" >&2
	echo >&2

	if [ -n "${1}" ]; then echo -e "${A_CS} error: ${1} ${N_CS}" >&2; fi >&2

	exit 1
}

if [[ "${1}" =~ ^-?-h(elp)?$ ]]; then usage ''; fi

# ?stash


details="$(get-pull-request "$(get-pull-request-number)")"

# {
#   "number": 137,
#   "open": "open",
#   "state": "behind",
#   "title": "fix linting error",
#   "user": "HJ81",
#   "body": "# Description\r\n\r\n> amm_api/src/api/shared/services/FileStorage.service.js\r\n>   63:39  error  Expected to return a value at the end of arrow function  consistent-return\r\n\r\n## Types of changes (mark one or more with `[X]`)\r\n\r\n- [x] Refactor (changes code but does not affect functionality)\r\n",
#   "head": "fix-linting-error",
#   "base": "dev",
#   "link": "https://github.cms.gov/HPMS/amm_api/pull/137"
# }

open="$(jq -r '.open' <<< "${details}")"
state="$(jq -r '.state' <<< "${details}")"
base="$(jq -r '.base' <<< "${details}")"

if [ "${open}" == 'open' ] && [ "${state}" == 'behind' ]; then
	echo 'git merge --commit -S --no-verify origin/"${base}"'
	echo 'git log --oneline --left-right --merge'
	echo 'git push --no-verify'
else
	echo 'either not open or not behind'
fi