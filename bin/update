#!/usr/bin/env bash

set -e
set -x

usage() {
	echo "Update the current branch by merging its base branch as determined by its PR" >&2
	echo >&2
	echo "usage:" >&2
	echo "  $(basename "${0}")>" >&2
	echo >&2

	if [ -n "${1}" ]; then echo -e "${A_CS} error: ${1} ${N_CS}" >&2; fi >&2

	exit 1
}

if [[ "${1}" =~ ^-?-h(elp)?$ ]]; then usage ''; fi

try_merge() {
	git merge --no-commit --log "origin/${base}"
}

retry_merge() ({
	prompt 'You wanna fix that?' && exit
	git merge --abort
	exit 1
})

details="$(get-pull-request "$(get-pull-request-number)")"

open="$(jq -r '.open' <<< "${details}")"
state="$(jq -r '.state' <<< "${details}")"
base="$(jq -r '.base' <<< "${details}")"

if [ "${open}" != 'open' ]; then
	echo -e "${S_CS} PR is not open, so nothing to do ${N_CS}" >&2
else
	echo -e "${S_CS} PR is '${state}' ${N_CS}" >&2
	sha="$(stash)"
	trap 'unstash "${sha}"' EXIT
	git fetch
	try_merge || retry_merge
	git log --oneline --left-right --merge
	git commit --no-edit
	git push --no-verify
fi