#!/usr/bin/env bash

usage() {
	echo "Create a draft Pull Request from the staged changes." >&2
	echo >&2
	echo "usage:" >&2
	echo "  $(basename "${0}") [-o] <title>" >&2
	echo >&2

	if [ -n "${1}" ]; then echo "error: ${1}" >&2; fi

	exit 1
}

if [[ "${1}" =~ ^-?-h(elp)?$ ]]; then usage ''; fi

if ! has-staged-changes; then usage "Expected staged changes."; fi

# TODO: update base branch before opening PR

bodyfile="$(mktemp)"
printf "%s\n\n" "${*}" > "${bodyfile}"
nano "${bodyfile}"

title="$(head -n 1 "${bodyfile}")"
body="$(tail -n +2 "${bodyfile}" | sed -e '/./,$!d')"

rm "${bodyfile}"

message="$(generate-commit-message "${title}")"
branch="$(generate-branch-name "${title}")"
base="$(get-base-branch)"

if [ -z "${title}" ]; then usage "Pull Request title is required."; fi
if [ -z "${message}" ]; then usage "Could not derive commit message."; fi
if [ -z "${branch}" ]; then usage "Could not derive branch name."; fi
if [ -z "${base}" ]; then usage "Could not determine base branch."; fi

if has-branch "${branch}"; then usage "Branch already exists: '${branch}'"; fi

read -r -d '' data <<JSON
{
	"title": "${title}",
	"base": "${base}",
	"head": "${branch}",
	"body": "${body}",
	"draft": true
}
JSON

git checkout -b "${branch}"
git commit -S -m "${message}"
git push -u origin "${branch}"
response="$(curl -H "Authorization: bearer ${GITHUB_TOKEN}" -H "Accept: application/vnd.github.shadow-cat-preview+json" -d "${data}" "$(get-repo-api)/repos/$(get-repo-name)/pulls" -s)"

prn="$(jq '.number' <<< "${response}")"
user="$(jq -r '.user.login' <<< "${response}")"

open "$(get-pull-request-link "${prn}")"

read -r -d '' data << JSON
{
	"assignees": [
		"${user}"
	]
}
JSON

curl -H "Authorization: bearer ${GITHUB_TOKEN}" -d "${data}" "$(get-repo-api)/repos/$(get-repo-name)/issues/${prn}/assignees"
