#!/usr/bin/env bash

set -e
set -x

delete_branch_like_a_jerk() {
	branch="${1}"
	if prompt "Are you sure you want to delete ${branch}?"; then
		git branch -D "${branch}"
	fi
}

delete_branch() {
	branch="${1}"
	if [[ "${branch}" =~ ^te?mp ]]; then
		git branch -D "${branch}"
	elif [ -n "${branch}" ]; then
		git branch -d "${branch}" || delete_branch_like_a_jerk "${branch}"
	else
		echo -e "${S_CS} No old branch to delete (probably a detached head) ${N_CS}" >&2
	fi
}

usage() {
	echo "Checkout the specified Branch or Pull Request" >&2
	echo >&2
	echo "usage:" >&2
	echo "  $(basename "${0}") <branch|prn>" >&2
	echo >&2

	if [ -n "${1}" ]; then echo -e "${A_CS} error: ${1} ${N_CS}" >&2; fi

	exit 1
}

initial="$(get-current-branch)"
branch="${1:-$(get-repo-base-branch)}"

if [[ "${branch}" =~ ^[0-9]+$ ]]; then
	pr_branch="$(get-pull-request "${branch}" | jq -r '.head' )"
	if [ "${pr_branch}" == 'null' ]; then usage "Couldn't find a branch for PR #${branch}."; fi
	branch="${pr_branch}"
fi

if [ -z "${branch}" ]; then usage "Branch or Pull Request Number required."; fi

git fetch

if [ "${branch}" == "${initial}" ]; then
	echo -e "${S_CS} You're already on ${branch} ${N_CS}" >&2

elif has-local-branch "${branch}"; then
	echo -e "${S_CS} Checking out local branch... ${N_CS}" >&2
	git checkout "${branch}"

elif has-remote-branch  "${branch}"; then
	echo -e "${S_CS} Checking out remote branch... ${N_CS}" >&2
	git checkout "${branch}"

elif [[ "${branch}" =~ ^te?mp ]]; then
	echo -e "${I_CS} I noticed you checked out a temp branch. Good for you. ${N_CS}" >&2
	git checkout -b "${branch}"

elif prompt "Create ${branch}"; then
	echo -e "${S_CS} Creating new branch... ${N_CS}" >&2
	git checkout -b "${branch}"
	git push -u origin "${branch}"

else
	usage 'Well, nevermind then.'
fi

if has-remote-branch  "${branch}"; then
	echo -e "${S_CS} Updating branch... ${N_CS}" >&2
	git pull
fi

if [ "${branch}" != "${initial}" ]; then
	delete_branch "${initial}"
fi
