#!/usr/bin/env bash

set -e
# set -x

root_path="${HOME}/Documents/TODO"
todo_file_name="${root_path}/todo.txt"
done_file_name="${root_path}/done.txt"

mkdir -p "${root_path}"
touch "${todo_file_name}"
touch "${done_file_name}"

usage() {
	echo "Maintain a list of 'TODO' items." >&2
	echo >&2
	echo "usage:" >&2
	echo "  $(basename "${0}") [-o] [-(d|r|p) <id> ...] [<task>]" >&2
	echo >&2
	echo "options:" >&2
	echo "  -d <id> [<id> ...]    Mark the item(s) as done" >&2
	echo "  -r <id> [<id> ...]    Reset the item(s) to the bottom of the list" >&2
	echo "  -p <id> [<id> ...]    Prioritize the item(s) to the top of the list" >&2
	echo "  -o                    Open the TODO files" >&2
	echo >&2

	if [ -n "${1}" ]; then echo -e "${A_CS} error: ${1} ${N_CS}" >&2; fi

	exit 1
}

print_todo_item() {
	tmp="${2#*[}"
	echo -e "\t${S_CS} ${1} ${K_CS}- ${I_CS}${2%% *} ${K_CS}[${tmp%%]*}]${I_CS}:${N_CS} ${tmp#*: }"
}

highlight_todo_item() {
	tmp="${2#*[}"
	echo -e "\t${I_CS} ${1} ${K_CS}- ${I_CS}${2%% *} ${K_CS}[${tmp%%]*}]${I_CS}:${N_CS} ${tmp#*: }"
}

strike_todo_item() {
	echo -e "\t${K_CS} $(strike "${1} - ${2}")${N_CS}"
}

list_todo_items() {
	echo -e "${S_CS} TODO: ${N_CS}" >&2

	count=0
	while read -u 3 -r entry; do
		count="$((count + 1))"
		print_todo_item "${count}" "${entry}" >&2
	done 3< "${todo_file_name}"

	echo -e "${S_CS} Done, ${count} items ${N_CS}" >&2
}

create_todo_item() {
	echo -e "${S_CS} TODO: ${N_CS}" >&2

	count=0
	while read -u 3 -r entry; do
		count="$((count + 1))"
		print_todo_item "${count}" "${entry}" >&2
	done 3< "${todo_file_name}"

	count="$((count + 1))"
	date_str="$(date '+%Y-%m-%d')"
	entry="TODO [${date_str}]: ${1}"
	highlight_todo_item "${count}" "${entry}" >&2
	echo "${entry}" >> "${todo_file_name}"

	echo -e "${S_CS} Done, ${count} items ${N_CS}" >&2
}

update_todo_items() {
	id="${1}"
	temp_file="$(mktemp)"

	echo -e "${S_CS} DONE: ${N_CS}" >&2

	seen=0
	count=0
	while read -u 3 -r entry; do
		count="$((count + 1))"
		# shellcheck disable=SC2076,SC2199
		if [[ " ${@} " =~ " ${count} " ]]; then
			seen="$((seen + 1))"
			tmp="${entry#*[}"
			start="${tmp%%]*}"
			task="${tmp#*: }"
			finish="$(date '+%Y-%m-%d')"
			entry="DONE [${start}, ${finish}]: ${task}"
			strike_todo_item "${count}" "${entry}" >&2
			echo "${entry}" >> "${done_file_name}"
		else
			print_todo_item "$((count - seen))" "${entry}" >&2
			echo "${entry}" >> "${temp_file}"
		fi
	done 3< "${todo_file_name}"
	mv "${temp_file}" "${todo_file_name}"
	echo -e "${S_CS} Done, ${count} items ${N_CS}" >&2
}

reset_todo_items() {
	id="${1}"
	temp_file="$(mktemp)"

	echo -e "${S_CS} RESET: ${N_CS}" >&2

	seen=0
	count=0
	while read -u 3 -r entry; do
		count="$((count + 1))"
		# shellcheck disable=SC2076,SC2199
		if [[ " ${@} " =~ " ${count} " ]]; then
			seen="$((seen + 1))"
			strike_todo_item "${count}" "${entry}" >&2
		else
			print_todo_item "$((count - seen))" "${entry}" >&2
			echo "${entry}" >> "${temp_file}"
		fi
	done 3< "${todo_file_name}"

	seen="$((count - seen))"
	count=0
	while read -u 3 -r entry; do
		count="$((count + 1))"
		# shellcheck disable=SC2076,SC2199
		if [[ " ${@} " =~ " ${count} " ]]; then
			highlight_todo_item "$((count + seen))" "${entry}" >&2
			echo "${entry}" >> "${temp_file}"
		else
			seen="$((seen - 1))"
		fi
	done 3< "${todo_file_name}"

	mv "${temp_file}" "${todo_file_name}"
	echo -e "${S_CS} Done, ${count} items ${N_CS}" >&2
}

prioritize_todo_items() {
	temp_file="$(mktemp)"

	echo -e "${S_CS} PRIORITIZE: ${N_CS}" >&2

	seen=0
	count=0
	while read -u 3 -r entry; do
		count="$((count + 1))"
		# shellcheck disable=SC2076,SC2199
		if [[ " ${@} " =~ " ${count} " ]]; then
			seen="$((seen + 1))"
			highlight_todo_item "$((seen))" "${entry}" >&2
			echo "${entry}" >> "${temp_file}"
		else
			:
		fi
	done 3< "${todo_file_name}"

	count=0
	while read -u 3 -r entry; do
		count="$((count + 1))"
		# shellcheck disable=SC2076,SC2199
		if [[ " ${@} " =~ " ${count} " ]]; then
			strike_todo_item "${count}" "${entry}" >&2
			seen="$((seen - 1))"
		else
			print_todo_item "$((count + seen))" "${entry}" >&2
			echo "${entry}" >> "${temp_file}"
		fi
	done 3< "${todo_file_name}"

	mv "${temp_file}" "${todo_file_name}"
	echo -e "${S_CS} Done, ${count} items ${N_CS}" >&2
}

if [[ "${1}" =~ ^-?-h(elp)?$ ]]; then usage ''; fi

mode='list'
ids=()

if (( $# > 0 )); then
	mode='add'
fi

while (( $# > 0 )); do
	if [[ "${1}" == '-d' ]]; then
		mode='done'
	elif [[ "${1}" == '-r' ]]; then
		mode='reset'
	elif [[ "${1}" == '-p' ]]; then
		mode='prioritize'
	elif [[ "${1}" == '-o' ]]; then
		open "${done_file_name}" "${todo_file_name}"
		exit
	elif [ "${mode}" == 'add' ]; then
		task="${task}${task:+ }${1}"
	elif [[ "${1}" =~ ^[0-9]+$ ]]; then
		ids+=("${1}")
	else
		usage "Unexpected argument: '${1}'"
	fi
	shift
done

if [ "${mode}" == 'list' ]; then
	list_todo_items
elif [ "${mode}" == 'add' ]; then
	create_todo_item "${task}"
elif [ "${mode}" == 'done' ]; then
	update_todo_items "${ids[@]}"
elif [ "${mode}" == 'reset' ]; then
	reset_todo_items "${ids[@]}"
elif [ "${mode}" == 'prioritize' ]; then
	prioritize_todo_items "${ids[@]}"
fi