#!/usr/bin/env bash

set -e

usage() {
	echo "Run a randomly selected linter* on some randomly selected files**." >&2
	echo >&2
	echo "usage:" >&2
	echo "  $(basename "${0}") [list|fix|all]" >&2
	echo >&2
	echo "options:" >&2
	echo "  list  Dump a list of the files we might be interested in." >&2
	echo "  fix   Maybe try to clean some errors." >&2
	echo "  all   Lint the whole project if the index is clean." >&2
	echo >&2
	echo "footnotes:" >&2
	echo "  *     linter not really randomly selected." >&2
	echo "  **    files not really randomly selected either." >&2
	echo >&2

	if [ -n "${1}" ]; then echo -e "${A_CS} error: ${1} ${N_CS}" >&2; fi

	exit 1
}

list() {
	if [ -z "$(git diff --staged)" ]; then
		git diff --name-only | sed -E -e '/\.(js|ts)$/!d'
	else
		git diff --name-only --staged | sed -E -e '/\.(js|ts)$/!d'
	fi
}

lint() {
	echo -e "${S_CS} Linting... ${N_CS}" >&2
	list | xargs eslint
	echo -e "${S_CS} Done ${N_CS}" >&2
}

lint-all() {
	echo -e "${S_CS} Linting... ${N_CS}" >&2
	list | xargs eslint --ignore-pattern '**\.**'
	if [ "$?" = 0 ]; then
		echo -e "${S_CS} Done ${N_CS}" >&2
	else
		echo -e "${S_CS} Done ${N_CS}" >&2
		return 1
	fi
}

lint-fix() {
	echo -e "${S_CS} Linting & Fixing... ${N_CS}" >&2
	list | xargs eslint --fix
	echo -e "${S_CS} Done ${N_CS}" >&2
}

npm-lint() {
	npm='npm'

	if [ "$(jq -rc '.engines.yarn' package.json)" != 'null' ]; then npm=yarn; fi

	echo -e "${I_CS} Running $npm run lint ... ${N_CS}" >&2
	$npm run lint
}

if [[ "${1}" =~ ^-?-h(elp)?$ ]]; then usage ''; fi

run_any=1
run_all=0
while (( $# > 0 )); do
	case "${1}" in
		list)
			list
			run_any=0
			;;
		fix)
			lint-fix && echo -e "${S_CS} Done ${N_CS}" >&2
			run_any=0
			;;
		all)
			run_all=1
			;;
		*)
			usage "Unknown argument: ${1}"
			;;
	esac
	shift
done

if [ "${run_any}" == '1' ]; then
	if [ "${run_all}" == '1' ]; then
		if [ -z "$(list)" ]; then
			echo -e "${S_CS} No files in index. Linting the whole project ${N_CS}" >&2
			npm-lint

		else
			lint-all && echo -e "${S_CS} Index is clean. Linting the whole project ${N_CS}" >&2 && sleep 2 && npm-lint
		fi
	else
		lint
	fi
fi


# eslint ./src/ --ignore-path .gitignore --ignore-pattern internals/scripts --ignore-pattern **/*.*-test.js