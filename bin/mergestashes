#!/usr/bin/env bash

set -e
set -x

squish_stash() {
	if STASH_RESPONSE="$(git stash apply 2>&1)"; then
		echo -e  "${S_CS} Stash applied cleanly. ${N_CS}" >&2
	else
		while read -u 3 -r; do
			if [[ "${REPLY}" =~ already\ exists,\ no\ checkout ]]; then
				FILE_NAME="$(sed -E -e 's/ already exists, no checkout//' <<< "${REPLY}")"
				if [ -e "${FILE_NAME}" ]; then
					rm -r "${FILE_NAME}" >&2
				fi
			fi
		done 3<<< "${STASH_RESPONSE}"
		git stash apply >&2 || prompt 'You wanna fix that crap?'
	fi
	git stash drop >&2
	git add . >&2

	if has-staged-changes; then
		git -c core.hooksPath=/dev/null commit --no-verify -m "$(date +%s)" >&2
		echo '1'

	else
		echo -e  "${W_CS} Okay, that one ended up being empty. ${N_CS}" >&2
		echo '0'
	fi
}

usage() {
	echo "Smash all your stashes into nothingness" >&2
	echo >&2
	echo "usage:" >&2
	echo "  $(basename "${0}")" >&2
	echo >&2

	if [ -n "${1}" ]; then echo -e "${A_CS} error: ${1} ${N_CS}" >&2; fi

	exit 1
}

if [[ "${1}" =~ ^-?-h(elp)?$ ]]; then usage ''; fi

initial="$(get-current-branch)"

git stash -u
git checkout -b "tmp/$(date +%s)"

stashlimit="$(git stash list | wc -l | tr -d ' ')"
echo -e "${I_CS} ${stashlimit} stashes to look at... ${N_CS}"

stashindex=0
stashcount=0
while (( stashindex < stashlimit )); do
	increment="$(squish_stash)"
	stashindex="$(( stashindex + 1 ))"
	stashcount="$(( stashcount + increment ))"
done

echo -e "${I_CS} Merged ${stashcount} / ${stashlimit} stashes ${N_CS}"

if (( stashcount > 0 )); then
	reset_to="HEAD"
	while (( stashcount > 0 )); do
		reset_to="${reset_to}~"
		stashcount="$(( stashcount - 1 ))"
	done
	git reset "${reset_to}"
fi

git checkout "${initial}"

afplay /System/Library/PrivateFrameworks/ScreenReader.framework/Versions/A/Resources/Sounds/BubbleDisappear.aiff &
